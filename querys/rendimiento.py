import pandas as pd
from datetime import datetime


def convertir_csv_a_sql_rendimiento():
    """
    Convierte los datos del CSV de Rendimiento en datos SQL generando un archivo .sql.
    """
    input_path = 'archivos csv/Rendimiento.csv'  # Ruta del CSV de entrada
    output_path = 'archivos sql/rendimiento.sql'  # Ruta del SQL de salida
    separador = ','  # Cambiar si el separador del CSV es diferente
    
    df = pd.read_csv(input_path, sep=separador)
    
    # Convertir fechas en 'Vencimiento contrato' al formato adecuado (YYYY-MM-DD)
    df['Vencimiento contrato'] = df['Vencimiento contrato'].apply(
        lambda x: x if pd.notna(x) and '-' in x and len(x.split('-')[0]) == 4
        else datetime.strptime(x, "%d/%m/%Y").strftime("%Y-%m-%d") if pd.notna(x) and '/' in x
        else datetime.strptime(x, "%d-%m-%Y").strftime("%Y-%m-%d") if pd.notna(x) and '-' in x
        else None
    )
    
    # Convertir valores booleanos en 'En prestamo'
    df['En prestamo'] = df['En prestamo'].apply(
        lambda x: True if str(x).strip().lower() == 'si' else False if str(x).strip().lower() == 'no' else None
    )
    
    # Reemplazar NaN en el DataFrame con None para representar NULL en SQL
    df = df.where(pd.notna(df), None)
    
    id_referencia = 468
    anio = 2025
    
    # Lista para almacenar las consultas SQL generadas
    lista_query = []
    
    for i in df.index:
        query = f"""
            INSERT INTO rendimiento (
                id_rendimiento, jugador, equipo, equipo_durante_el_periodo_seleccionado, posicion_especifica, edad,
                valor_de_mercado_transfermarkt, vencimiento_contrato, partidos_jugados, minutos_jugados, goles, xg,
                asistencias, xa, duelos_p90, duelos_ganados_porcentaje, pais_de_nacimiento, pasaporte, pie, altura, peso,
                en_prestamo, acciones_defensivas_realizadas_p90, duelos_defensivos_p90, duelos_defensivos_ganados_porcentaje,
                duelos_aereos_en_los_90, duelos_aereos_ganados_porcentaje, entradas_p90, posesion_conquistada_despues_de_una_entrada,
                tiros_interceptados_p90, interceptaciones_p90, posesion_conquistada_despues_de_una_interceptacion, faltas_p90,
                tarjetas_amarillas, tarjetas_amarillas_p90, tarjetas_rojas, tarjetas_rojas_p90, acciones_de_ataque_exitosas_p90,
                goles_p90, goles_excepto_los_penaltis, goles_excepto_los_penaltis_p90, xg_p90, goles_de_cabeza, goles_de_cabeza_p90,
                remates, remates_p90, tiros_a_la_porteria_porcentaje, goles_hechos_porcentaje, asistencias_p90, centros_p90,
                precision_centros_porcentaje, centros_desde_la_banda_izquierda_p90, precision_centros_desde_la_banda_izquierda_porcentaje,
                centros_desde_la_banda_derecha_p90, precision_centros_desde_la_banda_derecha_porcentaje, centros_al_area_pequena_p90,
                regates_p90, regates_realizados_porcentaje, duelos_atacantes_p90, duelos_atacantes_ganados_porcentaje,
                toques_en_el_area_de_penalti_p90, carreras_en_progresion_p90, aceleraciones_p90, pases_recibidos_p90,
                pases_largos_recibidos_p90, faltas_recibidas_p90, pases_p90, precision_pases_porcentaje, pases_hacia_adelante_p90,
                precision_pases_hacia_adelante_porcentaje, pases_hacia_atras_p90, precision_pases_hacia_atras_porcentaje,
                pases_laterales_p90, precision_pases_laterales_porcentaje, pases_cortos_medios_p90, precision_pases_cortos_medios_porcentaje,
                pases_largos_p90, precision_pases_largos_porcentaje, longitud_media_pases_m, longitud_media_pases_largos_m,
                xa_p90, asistencias_p90_2, second_assists_p90, third_assists_p90, desmarques_p90, precision_desmarques_porcentaje,
                jugadas_claves_p90, pases_en_el_ultimo_tercio_p90, precision_pases_en_el_ultimo_tercio_porcentaje, pases_al_area_de_penalti_p90,
                pases_hacia_el_area_pequena_porcentaje, pases_en_profundidad_p90, precision_pases_en_profundidad_porcentaje,
                ataque_en_profundidad_p90, centros_desde_el_ultimo_tercio_p90, pases_progresivos_p90, precision_pases_progresivos_porcentaje,
                goles_recibidos, goles_recibidos_p90, remates_en_contra, remates_en_contra_p90, porterias_imbatidas_en_los_90,
                paradas_porcentaje, xg_en_contra, xg_en_contra_p90, goles_evitados, goles_evitados_p90, pases_hacia_atras_recibidos_del_arquero_p90,
                salidas_p90, duelos_aereos_en_los_90_2, tiros_libres_p90, tiros_libres_directos_p90, tiros_libres_directos_porcentaje,
                corneres_p90, penaltis_a_favor, penaltis_realizados_porcentaje, anio
            )
            VALUES (
                {id_referencia+1},
                {f"'{df['Jugador'][i].replace(chr(39), ' ')}'" if not pd.isna(df['Jugador'][i]) else 'NULL'},
                {f"'{df['Equipo'][i].replace(chr(39), ' ')}'" if not pd.isna(df['Equipo'][i]) else 'NULL'},
                {f"'{df['Equipo durante el período seleccionado'][i].replace(chr(39), ' ')}'" if not pd.isna(df['Equipo durante el período seleccionado'][i]) else 'NULL'},
                {f"'{df['Posición específica'][i].replace(chr(39), ' ')}'" if not pd.isna(df['Posición específica'][i]) else 'NULL'},
                {df['Edad'][i] if not pd.isna(df['Edad'][i]) else 'NULL'},
                {float(str(df['Valor de mercado (Transfermarkt)'][i]).replace(',', '.')) if df['Valor de mercado (Transfermarkt)'][i] else 'NULL'},
                {f"'{df['Vencimiento contrato'][i]}'" if df['Vencimiento contrato'][i] else 'NULL'},
                {df['Partidos jugados'][i] if df['Partidos jugados'][i] else 'NULL'},
                {df['Minutos jugados'][i] if df['Minutos jugados'][i] else 'NULL'},
                {df['Goles'][i] if df['Goles'][i] else 'NULL'},
                {float(str(df['xG'][i]).replace(',', '.')) if df['xG'][i] else 'NULL'},
                {df['Asistencias'][i] if df['Asistencias'][i] else 'NULL'},
                {float(str(df['xA'][i]).replace(',', '.')) if df['xA'][i] else 'NULL'},
                {float(str(df['Duelos/90'][i]).replace(',', '.')) if df['Duelos/90'][i] else 'NULL'},
                {float(str(df['Duelos ganados, %'][i]).replace(',', '.')) if df['Duelos ganados, %'][i] else 'NULL'},
                {f"'{df['País de nacimiento'][i]}'" if df['País de nacimiento'][i] else 'NULL'},
                {f"'{df['Pasaporte'][i]}'" if df['Pasaporte'][i] else 'NULL'},
                {f"'{df['Pie'][i]}'" if df['Pie'][i] else 'NULL'},
                {df['Altura'][i] if df['Altura'][i] else 'NULL'},
                {df['Peso'][i] if df['Peso'][i] else 'NULL'},
                {df['En prestamo'][i] if df['En prestamo'][i] is not None else 'NULL'},
                {float(str(df['Acciones defensivas realizadas/90'][i]).replace(',', '.')) if df['Acciones defensivas realizadas/90'][i] else 'NULL'},
                {float(str(df['Duelos defensivos/90'][i]).replace(',', '.')) if df['Duelos defensivos/90'][i] else 'NULL'},
                {float(str(df['Duelos defensivos ganados, %'][i]).replace(',', '.')) if df['Duelos defensivos ganados, %'][i] else 'NULL'},
                {float(str(df['Duelos aéreos en los 90'][i]).replace(',', '.')) if df['Duelos aéreos en los 90'][i] else 'NULL'},
                {float(str(df['Duelos aéreos ganados, %'][i]).replace(',', '.')) if df['Duelos aéreos ganados, %'][i] else 'NULL'},
                {float(str(df['Entradas/90'][i]).replace(',', '.')) if df['Entradas/90'][i] else 'NULL'},
                {float(str(df['Posesión conquistada después de una entrada'][i]).replace(',', '.')) if df['Posesión conquistada después de una entrada'][i] else 'NULL'},
                {float(str(df['Tiros interceptados/90'][i]).replace(',', '.')) if df['Tiros interceptados/90'][i] else 'NULL'},
                {float(str(df['Interceptaciones/90'][i]).replace(',', '.')) if df['Interceptaciones/90'][i] else 'NULL'},
                {float(str(df['Posesión conquistada después de una interceptación'][i]).replace(',', '.')) if df['Posesión conquistada después de una interceptación'][i] else 'NULL'},
                {float(str(df['Faltas/90'][i]).replace(',', '.')) if df['Faltas/90'][i] else 'NULL'},
                {df['Tarjetas amarillas'][i] if df['Tarjetas amarillas'][i] else 'NULL'},
                {float(str(df['Tarjetas amarillas/90'][i]).replace(',', '.')) if df['Tarjetas amarillas/90'][i] else 'NULL'},
                {df['Tarjetas rojas'][i] if df['Tarjetas rojas'][i] else 'NULL'},
                {float(str(df['Tarjetas rojas/90'][i]).replace(',', '.')) if df['Tarjetas rojas/90'][i] else 'NULL'},
                {float(str(df['Acciones de ataque exitosas/90'][i]).replace(',', '.')) if df['Acciones de ataque exitosas/90'][i] else 'NULL'},
                {float(str(df['Goles/90'][i]).replace(',', '.')) if df['Goles/90'][i] else 'NULL'},
                {df['Goles (excepto los penaltis)'][i] if df['Goles (excepto los penaltis)'][i] else 'NULL'},
                {float(str(df['Goles, excepto los penaltis/90'][i]).replace(',', '.')) if df['Goles, excepto los penaltis/90'][i] else 'NULL'},
                {float(str(df['xG/90'][i]).replace(',', '.')) if df['xG/90'][i] else 'NULL'},
                {df['Goles de cabeza'][i] if df['Goles de cabeza'][i] else 'NULL'},
                {float(str(df['Goles de cabeza/90'][i]).replace(',', '.')) if df['Goles de cabeza/90'][i] else 'NULL'},
                {df['Remates'][i] if df['Remates'][i] else 'NULL'},
                {float(str(df['Remates/90'][i]).replace(',', '.')) if df['Remates/90'][i] else 'NULL'},
                {float(str(df['Tiros a la portería, %'][i]).replace(',', '.')) if df['Tiros a la portería, %'][i] else 'NULL'},
                {float(str(df['Goles hechos, %'][i]).replace(',', '.')) if df['Goles hechos, %'][i] else 'NULL'},
                {float(str(df['Asistencias/90'][i]).replace(',', '.')) if df['Asistencias/90'][i] else 'NULL'},
                {float(str(df['Centros/90'][i]).replace(',', '.')) if df['Centros/90'][i] else 'NULL'},
                {float(str(df['Precisión centros, %'][i]).replace(',', '.')) if df['Precisión centros, %'][i] else 'NULL'},
                {float(str(df['Centros desde la banda izquierda/90'][i]).replace(',', '.')) if df['Centros desde la banda izquierda/90'][i] else 'NULL'},
                {float(str(df['Precisión centros desde la banda izquierda, %'][i]).replace(',', '.')) if df['Precisión centros desde la banda izquierda, %'][i] else 'NULL'},
                {float(str(df['Centros desde la banda derecha/90'][i]).replace(',', '.')) if df['Centros desde la banda derecha/90'][i] else 'NULL'},
                {float(str(df['Precisión centros desde la banda derecha, %'][i]).replace(',', '.')) if df['Precisión centros desde la banda derecha, %'][i] else 'NULL'},
                {float(str(df['Centros al área pequeña/90'][i]).replace(',', '.')) if df['Centros al área pequeña/90'][i] else 'NULL'},
                {float(str(df['Regates/90'][i]).replace(',', '.')) if df['Regates/90'][i] else 'NULL'},
                {float(str(df['Regates realizados, %'][i]).replace(',', '.')) if df['Regates realizados, %'][i] else 'NULL'},
                {float(str(df['Duelos atacantes/90'][i]).replace(',', '.')) if df['Duelos atacantes/90'][i] else 'NULL'},
                {float(str(df['Duelos atacantes ganados, %'][i]).replace(',', '.')) if df['Duelos atacantes ganados, %'][i] else 'NULL'},
                {float(str(df['Toques en el área de penalti/90'][i]).replace(',', '.')) if df['Toques en el área de penalti/90'][i] else 'NULL'},
                {float(str(df['Carreras en progresión/90'][i]).replace(',', '.')) if df['Carreras en progresión/90'][i] else 'NULL'},
                {float(str(df['Aceleraciones/90'][i]).replace(',', '.')) if df['Aceleraciones/90'][i] else 'NULL'},
                {float(str(df['Pases recibidos /90'][i]).replace(',', '.')) if df['Pases recibidos /90'][i] else 'NULL'},
                {float(str(df['Pases largos recibidos/90'][i]).replace(',', '.')) if df['Pases largos recibidos/90'][i] else 'NULL'},
                {float(str(df['Faltas recibidas/90'][i]).replace(',', '.')) if df['Faltas recibidas/90'][i] else 'NULL'},
                {float(str(df['Pases/90'][i]).replace(',', '.')) if df['Pases/90'][i] else 'NULL'},
                {float(str(df['Precisión pases, %'][i]).replace(',', '.')) if df['Precisión pases, %'][i] else 'NULL'},
                {float(str(df['Pases hacia adelante/90'][i]).replace(',', '.')) if df['Pases hacia adelante/90'][i] else 'NULL'},
                {float(str(df['Precisión pases hacia adelante, %'][i]).replace(',', '.')) if df['Precisión pases hacia adelante, %'][i] else 'NULL'},
                {float(str(df['Pases hacia atrás/90'][i]).replace(',', '.')) if df['Pases hacia atrás/90'][i] else 'NULL'},
                {float(str(df['Precision pases hacia atrás, %'][i]).replace(',', '.')) if df['Precision pases hacia atrás, %'][i] else 'NULL'},
                {float(str(df['Pases laterales/90'][i]).replace(',', '.')) if df['Pases laterales/90'][i] else 'NULL'},
                {float(str(df['Precisión pases laterales, %'][i]).replace(',', '.')) if df['Precisión pases laterales, %'][i] else 'NULL'},
                {float(str(df['Pases cortos / medios /90'][i]).replace(',', '.')) if df['Pases cortos / medios /90'][i] else 'NULL'},
                {float(str(df['Precisión pases cortos / medios, %'][i]).replace(',', '.')) if df['Precisión pases cortos / medios, %'][i] else 'NULL'},
                {float(str(df['Pases largos/90'][i]).replace(',', '.')) if df['Pases largos/90'][i] else 'NULL'},
                {float(str(df['Precisión pases largos, %'][i]).replace(',', '.')) if df['Precisión pases largos, %'][i] else 'NULL'},
                {float(str(df['Longitud media pases, m'][i]).replace(',', '.')) if df['Longitud media pases, m'][i] else 'NULL'},
                {float(str(df['Longitud media pases largos, m'][i]).replace(',', '.')) if df['Longitud media pases largos, m'][i] else 'NULL'},
                {float(str(df['xA/90'][i]).replace(',', '.')) if df['xA/90'][i] else 'NULL'},
                {float(str(df['Asistencias/90'][i]).replace(',', '.')) if df['Asistencias/90'][i] else 'NULL'},
                {float(str(df['Second assists/90'][i]).replace(',', '.')) if df['Second assists/90'][i] else 'NULL'},
                {float(str(df['Third assists/90'][i]).replace(',', '.')) if df['Third assists/90'][i] else 'NULL'},
                {float(str(df['Desmarques/90'][i]).replace(',', '.')) if df['Desmarques/90'][i] else 'NULL'},
                {float(str(df['Precisión desmarques, %'][i]).replace(',', '.')) if df['Precisión desmarques, %'][i] else 'NULL'},
                {float(str(df['Jugadas claves/90'][i]).replace(',', '.')) if df['Jugadas claves/90'][i] else 'NULL'},
                {float(str(df['Pases en el último tercio/90'][i]).replace(',', '.')) if df['Pases en el último tercio/90'][i] else 'NULL'},
                {float(str(df['Precisión pases en el último tercio, %'][i]).replace(',', '.')) if df['Precisión pases en el último tercio, %'][i] else 'NULL'},
                {float(str(df['Pases al área de penalti/90'][i]).replace(',', '.')) if df['Pases al área de penalti/90'][i] else 'NULL'},
                {float(str(df['Pases hacía el área pequeña, %'][i]).replace(',', '.')) if df['Pases hacía el área pequeña, %'][i] else 'NULL'},
                {float(str(df['Pases en profundidad/90'][i]).replace(',', '.')) if df['Pases en profundidad/90'][i] else 'NULL'},
                {float(str(df['Precisión pases en profundidad, %'][i]).replace(',', '.')) if df['Precisión pases en profundidad, %'][i] else 'NULL'},
                {float(str(df['Ataque en profundidad/90'][i]).replace(',', '.')) if df['Ataque en profundidad/90'][i] else 'NULL'},
                {float(str(df['Centros desde el último tercio/90'][i]).replace(',', '.')) if df['Centros desde el último tercio/90'][i] else 'NULL'},
                {float(str(df['Pases progresivos/90'][i]).replace(',', '.')) if df['Pases progresivos/90'][i] else 'NULL'},
                {float(str(df['Precisión pases progresivos, %'][i]).replace(',', '.')) if df['Precisión pases progresivos, %'][i] else 'NULL'},
                {df['Goles recibidos'][i] if df['Goles recibidos'][i] else 'NULL'},
                {float(str(df['Goles recibidos/90'][i]).replace(',', '.')) if df['Goles recibidos/90'][i] else 'NULL'},
                {df['Remates en contra'][i] if df['Remates en contra'][i] else 'NULL'},
                {float(str(df['Remates en contra/90'][i]).replace(',', '.')) if df['Remates en contra/90'][i] else 'NULL'},
                {df['Porterías imbatidas en los 90'][i] if df['Porterías imbatidas en los 90'][i] else 'NULL'},
                {float(str(df['Paradas, %'][i]).replace(',', '.')) if df['Paradas, %'][i] else 'NULL'},
                {float(str(df['xG en contra'][i]).replace(',', '.')) if df['xG en contra'][i] else 'NULL'},
                {float(str(df['xG en contra/90'][i]).replace(',', '.')) if df['xG en contra/90'][i] else 'NULL'},
                {float(str(df['Goles evitados'][i]).replace(',', '.')) if df['Goles evitados'][i] else 'NULL'},
                {float(str(df['Goles evitados/90'][i]).replace(',', '.')) if df['Goles evitados/90'][i] else 'NULL'},
                {float(str(df['Pases hacía atrás recibidos del arquero/90'][i]).replace(',', '.')) if df['Pases hacía atrás recibidos del arquero/90'][i] else 'NULL'},
                {float(str(df['Salidas/90'][i]).replace(',', '.')) if df['Salidas/90'][i] else 'NULL'},
                {float(str(df['Duelos aéreos en los 90'][i]).replace(',', '.')) if df['Duelos aéreos en los 90'][i] else 'NULL'},
                {float(str(df['Tiros libres/90'][i]).replace(',', '.')) if df['Tiros libres/90'][i] else 'NULL'},
                {float(str(df['Tiros libres directos/90'][i]).replace(',', '.')) if df['Tiros libres directos/90'][i] else 'NULL'},
                {float(str(df['Tiros libres directos, %'][i]).replace(',', '.')) if df['Tiros libres directos, %'][i] else 'NULL'},
                {float(str(df['Córneres/90'][i]).replace(',', '.')) if df['Córneres/90'][i] else 'NULL'},
                {df['Penaltis a favor'][i] if df['Penaltis a favor'][i] else 'NULL'},
                {float(str(df['Penaltis realizados, %'][i]).replace(',', '.')) if df['Penaltis realizados, %'][i] else 'NULL'},
                {anio}
            )


            ON CONFLICT (id_rendimiento) DO UPDATE
            SET 
                jugador = EXCLUDED.jugador,
                equipo = EXCLUDED.equipo,
                equipo_durante_el_periodo_seleccionado = EXCLUDED.equipo_durante_el_periodo_seleccionado,
                posicion_especifica = EXCLUDED.posicion_especifica,
                edad = EXCLUDED.edad,
                valor_de_mercado_transfermarkt = EXCLUDED.valor_de_mercado_transfermarkt,
                vencimiento_contrato = EXCLUDED.vencimiento_contrato,
                partidos_jugados = EXCLUDED.partidos_jugados,
                minutos_jugados = EXCLUDED.minutos_jugados,
                goles = EXCLUDED.goles,
                xg = EXCLUDED.xg,
                asistencias = EXCLUDED.asistencias,
                xa = EXCLUDED.xa,
                duelos_p90 = EXCLUDED.duelos_p90,
                duelos_ganados_porcentaje = EXCLUDED.duelos_ganados_porcentaje,
                pais_de_nacimiento = EXCLUDED.pais_de_nacimiento,
                pasaporte = EXCLUDED.pasaporte,
                pie = EXCLUDED.pie,
                altura = EXCLUDED.altura,
                peso = EXCLUDED.peso,
                en_prestamo = EXCLUDED.en_prestamo,
                acciones_defensivas_realizadas_p90 = EXCLUDED.acciones_defensivas_realizadas_p90,
                duelos_defensivos_p90 = EXCLUDED.duelos_defensivos_p90,
                duelos_defensivos_ganados_porcentaje = EXCLUDED.duelos_defensivos_ganados_porcentaje,
                duelos_aereos_en_los_90 = EXCLUDED.duelos_aereos_en_los_90,
                duelos_aereos_ganados_porcentaje = EXCLUDED.duelos_aereos_ganados_porcentaje,
                entradas_p90 = EXCLUDED.entradas_p90,
                posesion_conquistada_despues_de_una_entrada = EXCLUDED.posesion_conquistada_despues_de_una_entrada,
                tiros_interceptados_p90 = EXCLUDED.tiros_interceptados_p90,
                interceptaciones_p90 = EXCLUDED.interceptaciones_p90,
                posesion_conquistada_despues_de_una_interceptacion = EXCLUDED.posesion_conquistada_despues_de_una_interceptacion,
                faltas_p90 = EXCLUDED.faltas_p90,
                tarjetas_amarillas = EXCLUDED.tarjetas_amarillas,
                tarjetas_amarillas_p90 = EXCLUDED.tarjetas_amarillas_p90,
                tarjetas_rojas = EXCLUDED.tarjetas_rojas,
                tarjetas_rojas_p90 = EXCLUDED.tarjetas_rojas_p90,
                acciones_de_ataque_exitosas_p90 = EXCLUDED.acciones_de_ataque_exitosas_p90,
                goles_p90 = EXCLUDED.goles_p90,
                goles_excepto_los_penaltis = EXCLUDED.goles_excepto_los_penaltis,
                goles_excepto_los_penaltis_p90 = EXCLUDED.goles_excepto_los_penaltis_p90,
                xg_p90 = EXCLUDED.xg_p90,
                goles_de_cabeza = EXCLUDED.goles_de_cabeza,
                goles_de_cabeza_p90 = EXCLUDED.goles_de_cabeza_p90,
                remates = EXCLUDED.remates,
                remates_p90 = EXCLUDED.remates_p90,
                tiros_a_la_porteria_porcentaje = EXCLUDED.tiros_a_la_porteria_porcentaje,
                goles_hechos_porcentaje = EXCLUDED.goles_hechos_porcentaje,
                asistencias_p90 = EXCLUDED.asistencias_p90,
                centros_p90 = EXCLUDED.centros_p90,
                precision_centros_porcentaje = EXCLUDED.precision_centros_porcentaje,
                centros_desde_la_banda_izquierda_p90 = EXCLUDED.centros_desde_la_banda_izquierda_p90,
                precision_centros_desde_la_banda_izquierda_porcentaje = EXCLUDED.precision_centros_desde_la_banda_izquierda_porcentaje,
                centros_desde_la_banda_derecha_p90 = EXCLUDED.centros_desde_la_banda_derecha_p90,
                precision_centros_desde_la_banda_derecha_porcentaje = EXCLUDED.precision_centros_desde_la_banda_derecha_porcentaje,
                centros_al_area_pequena_p90 = EXCLUDED.centros_al_area_pequena_p90,
                regates_p90 = EXCLUDED.regates_p90,
                regates_realizados_porcentaje = EXCLUDED.regates_realizados_porcentaje,
                duelos_atacantes_p90 = EXCLUDED.duelos_atacantes_p90,
                duelos_atacantes_ganados_porcentaje = EXCLUDED.duelos_atacantes_ganados_porcentaje,
                toques_en_el_area_de_penalti_p90 = EXCLUDED.toques_en_el_area_de_penalti_p90,
                carreras_en_progresion_p90 = EXCLUDED.carreras_en_progresion_p90,
                aceleraciones_p90 = EXCLUDED.aceleraciones_p90,
                pases_recibidos_p90 = EXCLUDED.pases_recibidos_p90,
                pases_largos_recibidos_p90 = EXCLUDED.pases_largos_recibidos_p90,
                faltas_recibidas_p90 = EXCLUDED.faltas_recibidas_p90,
                pases_p90 = EXCLUDED.pases_p90,
                precision_pases_porcentaje = EXCLUDED.precision_pases_porcentaje,
                pases_hacia_adelante_p90 = EXCLUDED.pases_hacia_adelante_p90,
                precision_pases_hacia_adelante_porcentaje = EXCLUDED.precision_pases_hacia_adelante_porcentaje,
                pases_hacia_atras_p90 = EXCLUDED.pases_hacia_atras_p90,
                precision_pases_hacia_atras_porcentaje = EXCLUDED.precision_pases_hacia_atras_porcentaje,
                pases_laterales_p90 = EXCLUDED.pases_laterales_p90,
                precision_pases_laterales_porcentaje = EXCLUDED.precision_pases_laterales_porcentaje,
                pases_cortos_medios_p90 = EXCLUDED.pases_cortos_medios_p90,
                precision_pases_cortos_medios_porcentaje = EXCLUDED.precision_pases_cortos_medios_porcentaje,
                pases_largos_p90 = EXCLUDED.pases_largos_p90,
                precision_pases_largos_porcentaje = EXCLUDED.precision_pases_largos_porcentaje,
                longitud_media_pases_m = EXCLUDED.longitud_media_pases_m,
                longitud_media_pases_largos_m = EXCLUDED.longitud_media_pases_largos_m,
                xa_p90 = EXCLUDED.xa_p90,
                asistencias_p90_2 = EXCLUDED.asistencias_p90_2,
                second_assists_p90 = EXCLUDED.second_assists_p90,
                third_assists_p90 = EXCLUDED.third_assists_p90,
                desmarques_p90 = EXCLUDED.desmarques_p90,
                precision_desmarques_porcentaje = EXCLUDED.precision_desmarques_porcentaje,
                jugadas_claves_p90 = EXCLUDED.jugadas_claves_p90,
                pases_en_el_ultimo_tercio_p90 = EXCLUDED.pases_en_el_ultimo_tercio_p90,
                precision_pases_en_el_ultimo_tercio_porcentaje = EXCLUDED.precision_pases_en_el_ultimo_tercio_porcentaje,
                pases_al_area_de_penalti_p90 = EXCLUDED.pases_al_area_de_penalti_p90,
                pases_hacia_el_area_pequena_porcentaje = EXCLUDED.pases_hacia_el_area_pequena_porcentaje,
                pases_en_profundidad_p90 = EXCLUDED.pases_en_profundidad_p90,
                precision_pases_en_profundidad_porcentaje = EXCLUDED.precision_pases_en_profundidad_porcentaje,
                ataque_en_profundidad_p90 = EXCLUDED.ataque_en_profundidad_p90,
                centros_desde_el_ultimo_tercio_p90 = EXCLUDED.centros_desde_el_ultimo_tercio_p90,
                pases_progresivos_p90 = EXCLUDED.pases_progresivos_p90,
                precision_pases_progresivos_porcentaje = EXCLUDED.precision_pases_progresivos_porcentaje,
                goles_recibidos = EXCLUDED.goles_recibidos,
                goles_recibidos_p90 = EXCLUDED.goles_recibidos_p90,
                remates_en_contra = EXCLUDED.remates_en_contra,
                remates_en_contra_p90 = EXCLUDED.remates_en_contra_p90,
                porterias_imbatidas_en_los_90 = EXCLUDED.porterias_imbatidas_en_los_90,
                paradas_porcentaje = EXCLUDED.paradas_porcentaje,
                xg_en_contra = EXCLUDED.xg_en_contra,
                xg_en_contra_p90 = EXCLUDED.xg_en_contra_p90,
                goles_evitados = EXCLUDED.goles_evitados,
                goles_evitados_p90 = EXCLUDED.goles_evitados_p90,
                pases_hacia_atras_recibidos_del_arquero_p90 = EXCLUDED.pases_hacia_atras_recibidos_del_arquero_p90,
                salidas_p90 = EXCLUDED.salidas_p90,
                duelos_aereos_en_los_90_2 = EXCLUDED.duelos_aereos_en_los_90_2,
                tiros_libres_p90 = EXCLUDED.tiros_libres_p90,
                tiros_libres_directos_p90 = EXCLUDED.tiros_libres_directos_p90,
                tiros_libres_directos_porcentaje = EXCLUDED.tiros_libres_directos_porcentaje,
                corneres_p90 = EXCLUDED.corneres_p90,
                penaltis_a_favor = EXCLUDED.penaltis_a_favor,
                penaltis_realizados_porcentaje = EXCLUDED.penaltis_realizados_porcentaje
                anio = EXCLUDED.anio;

        """
        
        lista_query.append(query)
    
    # Escribir las consultas SQL en el archivo .sql
    with open(output_path, 'w', encoding='utf-8') as f:
        for query in lista_query:
            f.write(query + '\n')
    
    print('Archivo convertido con éxito en:', output_path)
    print('----------------------------------------------')
